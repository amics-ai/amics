---
import Layout from '../../layouts/Layout.astro';
import { createZenblogClient } from "zenblog";

// Initialize Zenblog client
const zenblog = createZenblogClient({ blogId: import.meta.env.ZENBLOG_BLOG_ID });

// Get the current slug from params
const { slug } = Astro.params;

// Fetch the specific post
const post = await zenblog.posts.get({slug});

if (!post) {
  return Astro.redirect('/404');
}

export const prerender = true;
export async function getStaticPaths() {
    const zenblog = createZenblogClient({ blogId: import.meta.env.ZENBLOG_BLOG_ID });
  const articles = await zenblog.posts.list();

  return articles.data.map((article) => ({
    params: { slug: article.slug },
    props: article,
  }));
}
---

<Layout title={`${post.data.title} | Amics`}>
  <article class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-16 pt-24">
    {post.data.cover_image && (
      <div class="mb-8">
        <img
          src={post.data.cover_image}
          alt={post.data.title}
          class="w-full h-[400px] object-cover rounded-lg shadow-lg"
        />
      </div>
    )}

    <header class="mb-8">
      {post.data.tags && (
        <div class="flex flex-wrap gap-2 mb-4">
          {post.data.tags.map((tag) => (
            <span class="text-sm font-medium text-sky-600 bg-sky-50 px-3 py-1 rounded-full">
              {tag.slug}
            </span>
          ))}
        </div>
      )}

      <h1 class="text-4xl font-bold text-gray-900 mb-4">
        {post.data.title}
      </h1>

      <div class="flex items-center text-gray-500 text-sm">
        <time datetime={post.data.published_at}>
          {new Date(post.data.published_at).toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
          })}
        </time>
      </div>
    </header>

    <div class="prose prose-lg prose-slate prose-headings:font-bold prose-a:text-sky-600 hover:prose-a:text-sky-700 prose-img:rounded-lg prose-pre:bg-gray-800 prose-pre:text-gray-100 max-w-none">
      <Fragment set:html={post.data.html_content} />
    </div>

    <!-- Newsletter Section -->
  <div class="py-16 border-t border-gray-200">
    <div class="max-w-xl mx-auto text-center">
      <h2 class="text-3xl font-bold tracking-tight text-gray-900">
        Stay up to date
      </h2>
      <p class="mt-4 text-lg text-gray-600">
        Get notified when we publish new insights and developments in AI
      </p>
      <form id="newsletter-form" class="mt-8 flex flex-col gap-4 max-w-md mx-auto">
        <div class="flex flex-col sm:flex-row gap-2 sm:gap-3">
          <label for="email-address" class="sr-only">Email address</label>
          <input
            id="email-address"
            name="email"
            type="email"
            autocomplete="email"
            required
            class="min-w-0 flex-auto rounded-lg border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-sky-600 text-sm sm:text-base"
            placeholder="Enter your email"
          />
          <button
            type="submit"
            class="flex-none rounded-lg bg-sky-600 px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-sky-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-sky-600 disabled:opacity-50 disabled:cursor-not-allowed"
          >
            Subscribe
          </button>
        </div>
        <div id="success-message" class="text-sm text-green-600 hidden"></div>
        <div id="error-message" class="text-sm text-red-600 hidden"></div>
      </form>
      <p class="mt-4 text-sm text-gray-500">
        We care about your data. Read our{" "}
        <a href="/privacy" class="font-medium text-sky-600 hover:text-sky-500">
          Privacy Policy
        </a>
      </p>
    </div>
  </div>

    <div class="mt-8 border-t border-gray-200 pt-8">
      <a 
        href="/blog" 
        class="text-sky-600 hover:text-sky-800 font-medium flex items-center"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
        </svg>
        Back to Blog
      </a>
    </div>
  </article>
  
</main>
</Layout>

<script>
const form = document.querySelector('#newsletter-form');
const submitButton = form?.querySelector('button');
const successMessage = document.querySelector('#success-message');
const errorMessage = document.querySelector('#error-message');

form?.addEventListener('submit', async (e) => {
  e.preventDefault();
  if (!form) return;

  try {
    submitButton.disabled = true;
    submitButton!.textContent = 'Subscribing...';

    const formData = new FormData(form as HTMLFormElement);
    const response = await fetch(import.meta.env.PUBLIC_SUPABASE_URL + '/functions/v1/subscribe', {
      method: 'POST',
      body: JSON.stringify({
        email: formData.get('email'),
      }),
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${import.meta.env.PUBLIC_SUPABASE_KEY}`,
      },
    });

    if (!response.ok) throw new Error('Subscription failed');

    (form as HTMLFormElement).reset();
    successMessage!.textContent = 'Thanks for subscribing!';
    successMessage!.classList.remove('hidden');
    errorMessage!.classList.add('hidden');
  } catch (error) {
    errorMessage.textContent = 'Subscription failed. Please try again.';
    errorMessage.classList.remove('hidden');
    successMessage.classList.add('hidden');
  } finally {
    submitButton.disabled = false;
    submitButton.textContent = 'Subscribe';
  }
});
</script>
